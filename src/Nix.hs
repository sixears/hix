{-# LANGUAGE UnicodeSyntax #-}
module Nix
  ( nixDo
  ) where

import Base1T

-- base --------------------------------

import Data.Foldable ( Foldable )

-- env-plus ----------------------------

import Env.Types ( EnvModFrag, ”ô, ”≠ )

-- fpath -------------------------------

import FPath.AbsFile          ( AbsFile )
import FPath.Error.FPathError ( AsFPathError )

-- log-plus ----------------------------

import Log ( Log )

-- logging-effect ----------------------

import Control.Monad.Log ( LoggingT, MonadLog, Severity(Informational) )

-- mockio ------------------------------

import MockIO.DoMock ( DoMock(NoMock), HasDoMock(doMock) )

-- mockio-log --------------------------

import MockIO.Log ( MockIOClass, infoIO, warnIO )

-- mockio-plus -------------------------

import MockIO.Process               ( Íô© )
import MockIO.Process.MLCmdSpec     ( MLCmdSpec, ToMLCmdSpec )
import MockIO.Process.OutputDefault ( OutputDefault )

-- monadio-plus ------------------------

import MonadIO.Error.CreateProcError ( AsCreateProcError )
import MonadIO.Error.ProcExitError   ( AsProcExitError )
import MonadIO.Process.MakeProc      ( MakeProc )
import MonadIO.Process.OutputHandles ( OutputHandles )
import MonadIO.Process.ToMaybeTexts  ( ToMaybeTexts )

-- mtl ---------------------------------

import Control.Monad.Reader ( MonadReader, ReaderT, asks, runReaderT )

------------------------------------------------------------
--                     local imports                      --
------------------------------------------------------------

import Nix.Paths qualified as Paths

--------------------------------------------------------------------------------


nixDo ‚à∑ ‚àÄ Œµ Œ± Œ¥ Œ∂ œÜ Œº .
        (MonadIO Œº, Foldable œÜ, MonadReader Œ¥ Œº, HasDoMock Œ¥,
         AsIOError Œµ, AsFPathError Œµ, AsCreateProcError Œµ, AsProcExitError Œµ,
         Printable Œµ, MonadError Œµ Œº,
         MakeProc Œ∂, OutputDefault Œ±, ToMaybeTexts Œ±, OutputHandles Œ∂ Œ±,
         ToMLCmdSpec (AbsFile,[ùïã],[EnvModFrag]) Œ±,
         ToMLCmdSpec (AbsFile,[ùïã],[EnvModFrag],(MLCmdSpec Œ± ‚Üí MLCmdSpec Œ±)) Œ±,
         MonadLog (Log MockIOClass) Œº) ‚áí
        (ùïÑ (MLCmdSpec Œ± ‚Üí MLCmdSpec Œ±)) ‚Üí œÜ ùïã ‚Üí Œº Œ±

nixDo ùïπ args = snd ‚ä≥ Íô© (Paths.nix, toList args, [”≠ (”ô "NIX_CONFIG")])
nixDo (ùïµ mock_set) args =
  snd ‚ä≥ Íô© (Paths.nix, toList args, [”≠ (”ô "NIX_CONFIG")], mock_set)


-- that's all, folks! ----------------------------------------------------------
